const multer = require('multer')

app.use(express.static(__dirname + "../public"))

// use of multer package for uploading profile image...
var Storage = multer.diskStorage({
    destination: "./public/uploads/",
    filename: (req, file, cb) => {
        cb(null, file.fieldname + "_" + Date.now() + path.extname(file.originalname))
    }
})
var upload = multer({
    storage: Storage
}).single('file')

------------------------------------------------------


const uploadedImage = React.useRef(null);
const imageUploader = React.useRef(null);

const handleImageUpload = e => {
    const [file] = e.target.files;
    if (file) {
      const reader = new FileReader();
      const { current } = uploadedImage;
      current.file = file;
      reader.onload = e => {
        current.src = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  };

<div className='mb-3'>
                            Profile Picture<span className='ms-2 fst-italic' style={{ color: '#E41221' }}>( Click the Square to upload a Photo )</span>
                            <input type="file" accept="image/*" name="file" onChange={handleImageUpload} ref={imageUploader} style={{ display: "none" }} />
                            <div className='mt-2' style={{ height: "60px", width: "60px" }} onClick={() => imageUploader.current.click()}>
                              <img ref={uploadedImage} style={{ width: "100%", height: "100%" }} alt={''} />
                            </div>
                          </div>



                          const UpdateProject = () => {
        alert(projectName)
        alert(projectDescription)
        alert(projectTag)
        alert(projectTool)
    }

    projectName = duplicateArray.projectName
                projectImage = duplicateArray.projectImage
                projectTag = duplicateArray.projectTag
                projectLink = duplicateArray.projectLink
                projectTool = duplicateArray.projectTool
                projectDescription = duplicateArray.projectDescription

                
    const handleImageUpload = e => {
        setProjectImage(e.target.files[0])
        const [file] = e.target.files;
        if (file) {
            const reader = new FileReader();
            const { current } = uploadedImage;
            current.file = file;
            reader.onload = e => {
                current.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    }

    const uploadedImage = React.useRef(null);
    const imageUploader = React.useRef(null);

    
    let [projectImage, setProjectImage] = useState('')
    let [projectName, setProjectName] = useState('')
    let [projectTag] = useState('')
    let [projectLink, setProjectLink] = useState('')
    let [projectTool, setProjectTool] = useState('')
    let [projectDescription, setProjectDescription] = useState('')
    let [editCheck, setEditCheck] = useState(false)

      const EditProject = () => {
        editCheck = true
        setEditCheck(editCheck)
    }

else if (editCheck) {
        return (
            <div>
                <NavbarU />
                <section className="h-100 gradient-custom-2">
                    <div className="container py-4 h-100">
                        <div className="row d-flex justify-content-center align-items-center h-100">
                            <div className="col col-lg-8">
                                <div className="card text-center">
                                    <h5 className="fw-bold text-center mb-0 mt-2" style={{ letterSpacing: 1 }}>EDITING</h5>
                                    <p className='fst-italic text-center mb-2' style={{ color: '#E41221' }}>( Click on the <b>pink</b> screen to upload an image )</p>
                                    <div className="rounded-top text-white d-flex flex-row" style={{ backgroundColor: 'rgb(228, 18, 77)', height: 300 }}>
                                        <div className='mb-3'>
                                            <input type="file" accept="image/*" name="file" onChange={handleImageUpload} ref={imageUploader} style={{ display: "none" }} />
                                            <div style={{ height: "300px", width: "734px" }} onClick={() => imageUploader.current.click()}>
                                                <img ref={uploadedImage} style={{ width: "100%", height: "100%" }} alt={''} />
                                            </div>
                                        </div>
                                    </div>
                                    <div className="card-body p-4 text-black">
                                        <form>
                                            <div>
                                                <div className="mb-3">
                                                    <label htmlFor="name" className="form-label">Name</label>
                                                    <input onChange={(event) => setProjectName(event.target.value)} defaultValue={duplicateArray.projectName} type="text" className="form-control" id="name" />
                                                </div><div className="mb-3">
                                                    <label htmlFor="tools" className="form-label">Tools/Software used</label>
                                                    <input onChange={(event) => { setProjectTool(event.target.value) }} defaultValue={duplicateArray.projectTool} type="text" className="form-control" id="tools" placeholder="e.g., Adobe Illustrator" />
                                                </div><div className="mb-3">
                                                    <label htmlFor="link" className="form-label">Link (if any)</label>
                                                    <input onChange={(event) => { setProjectLink(event.target.value) }} defaultValue={duplicateArray.projectLink} type="text" className="form-control" id="link" />
                                                </div>
                                                <div className="mb-3">
                                                    <label htmlFor="exampleFormControlTextarea1" className="form-label">Description</label>
                                                    <textarea onChange={(event) => { setProjectDescription(event.target.value) }} defaultValue={duplicateArray.projectDescription} className="form-control" id="exampleFormControlTextarea1" rows={3} />
                                                </div>
                                            </div>
                                            <div className="pt-1">
                                                <button onClick={UpdateProject} className="btn btn-lg btn-dark btn-block" type="submit">Update</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section >
            </div>
        )
    }